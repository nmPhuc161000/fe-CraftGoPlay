import React, { useState, useEffect, useContext } from "react";
import { Link, useParams, useLocation } from "react-router-dom";
import MainLayout from "../../components/layout/MainLayout";
import ProductReviews from "./components/ProductReviews";
import { CartContext } from "../../contexts/CartContext";
import { useNavigate } from "react-router-dom";
import { AuthContext } from "../../contexts/AuthContext";
import productService from "../../services/apis/productApi";
import Notification from "../../components/Notification/Notification";

// const sampleProduct = {
//   name: "S·∫£n ph·∫©m th·ªß c√¥ng b·∫±ng Tre",
//   price: 13990000,
//   description: `L·∫•y c·∫£m h·ª©ng t·ª´ v·∫ª ƒë·∫πp huy·ªÅn b√≠ c·ªßa nh·ªØng ƒë·ªÅn th√°p c·ªï √Å ƒê√¥ng, Majestic Mahjong Set t√°i hi·ªán tinh hoa vƒÉn ho√° qua t·ª´ng n√©t ch·∫°m kh·∫Øc tinh x·∫£o. M·ªôt t√°c ph·∫©m ngh·ªá thu·∫≠t giao thoa gi·ªØa l·ªãch s·ª≠ v√† ngh·ªá thu·∫≠t, b·ªô c·ªù v·ª´a to√°t l√™n v·∫ª c·ªï k√≠nh uy nghi, v·ª´a t·∫°o d·∫•u ·∫•n ƒë·ªôc b·∫£n cho tr·∫£i nghi·ªám ch∆°i v√† tr∆∞ng b√†y.`,
//   images: [
//     "https://doanhnghiepkinhtexanh.vn/uploads/images/2022/08/05/074602-1-1659697249.jpg",
//     "https://mynghesenviet.vn/wp-content/uploads/2020/01/20190504_115952_petu.jpg",
//     "https://wikiluat.com/wp-content/uploads/2017/11/12maytredanXKquangnam5_0792_640x426.jpg",
//   ],
//   warranty: "12 th√°ng",
//   shipping: "Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn",
// };

const ProductDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const location = useLocation();

  const [selectedImg, setSelectedImg] = useState(null);
  const [quantity, setQuantity] = useState(1);
  const [reviews, setReviews] = useState([]);
  const [product, setProduct] = useState(null);
  const [showMessage, setShowMessage] = useState(false);
  const [showFavoriteMessage, setShowFavoriteMessage] = useState(false);

  const { isAuthenticated } = useContext(AuthContext);
  const { addToCart } = useContext(CartContext);

  useEffect(() => {
    const fetchProduct = async () => {
      try {
        const res = await productService.getProductById(id);
        const data = res.data?.data;
        setProduct(data);
        if (data?.productImages?.length > 0) {
          setSelectedImg(data.productImages[0].imageUrl);
        }
      } catch (error) {
        console.error("L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m:", error);
      }
    };

    fetchProduct();
  }, [id]);

  // Fake fetch API
  useEffect(() => {
    const fakeFetchReviews = async () => {
      const response = await new Promise((resolve) =>
        setTimeout(() => {
          resolve([
            {
              id: 1,
              name: "Nguy·ªÖn VƒÉn A",
              rating: 5,
              comment: "S·∫£n ph·∫©m r·∫•t ƒë·∫πp v√† ch·∫•t l∆∞·ª£ng, giao h√†ng nhanh.",
            },
            {
              id: 2,
              name: "Tr·∫ßn Th·ªã B",
              rating: 4,
              comment: "ƒê√≥ng g√≥i k·ªπ, s·∫£n ph·∫©m nh∆∞ m√¥ t·∫£, s·∫Ω ·ªßng h·ªô ti·∫øp.",
            },
            {
              id: 3,
              name: "L√™ Minh C",
              rating: 5,
              comment: "Tinh x·∫£o, ƒë√∫ng ch·∫•t h√†ng th·ªß c√¥ng. R·∫•t h√†i l√≤ng!",
            },
          ]);
        }, 500)
      );

      setReviews(response);
    };

    fakeFetchReviews();
  }, []);

  const handleBuyNow = () => {
    handleAddToCart();
    navigate("/checkout");
  };

  const handleAddToCart = () => {
    if (!isAuthenticated) {
      navigate("/login", { state: { from: location.pathname } });
      return;
    }
    addToCart({
      id: product.id,
      name: product.name,
      price: product.price,
      image: selectedImg,
      quantity: quantity,
    });
    setShowMessage(true);
    setTimeout(() => setShowMessage(false), 3500);
  };

  const handleFavorite = () => {
    if (!isAuthenticated) {
      navigate("/login", { state: { from: location.pathname } });
      return;
    }
    setShowFavoriteMessage(true);
    setTimeout(() => setShowFavoriteMessage(false), 3500);
  };

  if (!product) return <div className="text-center py-12">ƒêang t·∫£i s·∫£n ph·∫©m...</div>;

  return (
    <MainLayout>
      {showMessage && (
        <Notification
          message="ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!"
          type="success"
          onClose={() => setShowMessage(false)}
        />
      )}
      {showFavoriteMessage && (
        <Notification
          message="ƒê√£ th√™m v√†o danh s√°ch y√™u th√≠ch!"
          type="success"
          onClose={() => setShowFavoriteMessage(false)}
        />
      )}

      <div className="container mx-auto px-6 py-12 flex flex-col md:flex-row gap-8 text-[#5e3a1e]">
        {/* img san pham */}
        <div className="flex flex-col md:w-1/2">
          {selectedImg && (
            <img src={selectedImg} alt="product" className="w-full h-[420px] object-cover rounded-md" />
          )}
          <div className="flex mt-4 gap-2 overflow-x-auto">
            {product.productImages?.map((imgObj, index) => (
              <img
                key={index}
                src={imgObj.imageUrl}
                alt={`thumb-${index}`}
                onClick={() => setSelectedImg(imgObj.imageUrl)}
                className={`w-17 h-17 object-cover cursor-pointer border ${imgObj.imageUrl === selectedImg ? "border-black" : "border-gray-300"
                  }`}
              />
            ))}
          </div>
        </div>

        {/* thong tin */}
        <div className="md:w-1/2">
          <h1 className="text-3xl font-bold">{product.name}</h1>
          <p className="text-2xl text-red-600 mt-2">
            {product.price.toLocaleString()}‚Ç´
          </p>
          <div className="mt-4">
            <h3 className="font-semibold text-lg mb-2">M√¥ T·∫£ S·∫£n Ph·∫©m</h3>
            <p className="">{product.description}</p>
          </div>

          {/* gioi thieu them */}
          <div className="mt-6">
            <details className="mb-4 border-b pb-2">
              <summary className="cursor-pointer font-bold">
                Ch·∫•t Li·ªáu T·∫°o N√™n S·ª± Kh√°c Bi·ªát
              </summary>
              <div className="mt-2 space-y-1">
                {product.meterials?.length > 0 ? (
                  product.meterials.map((material, index) => (
                    <p key={index}>‚Ä¢ {material.name || material}</p>
                  ))
                ) : (
                  <p>Kh√¥ng c√≥ th√¥ng tin ch·∫•t li·ªáu.</p>
                )}
              </div>
            </details>
            <details className="mb-4 border-b pb-2">
              <summary className="cursor-pointer font-bold">
                Ngh·ªá Nh√¢n Ch·∫ø T√°c Th·ªß C√¥ng
              </summary>
              <p className="mt-2">
                {product.artisanName ? (
                  <>
                    S·∫£n ph·∫©m ƒë∆∞·ª£c ch·∫ø t√°c b·ªüi{" "}
                    <Link
                      to={`/artisan/${product.artisan_id}`}
                      className="text-[#5e3a1e] underline:none hover:text-[#3f2812] font-bold"
                    >
                      {product.artisanName}
                    </Link>.
                  </>
                ) : (
                  "Kh√¥ng c√≥ th√¥ng tin ngh·ªá nh√¢n."
                )}
              </p>
            </details>
          </div>

          {/* quantity */}
          <div className="mt-6 flex items-center gap-4">
            <span className="text-lg font-medium">S·ªë l∆∞·ª£ng:</span>
            <div className="flex items-center border rounded-lg overflow-hidden">
              <button
                onClick={() => setQuantity((q) => Math.max(1, q - 1))}
                className="px-4 py-2 text-lg font-bold text-[#5e3a1e] hover:bg-[#e6d3bc] transition"
              >
                ‚àí
              </button>
              <span className="px-5 py-2 text-lg">{quantity}</span>
              <button
                onClick={() => setQuantity((q) => q + 1)}
                className="px-4 py-2 text-lg font-bold text-[#5e3a1e] hover:bg-[#e6d3bc] transition"
              >
                +
              </button>
            </div>
          </div>

          <div className="mt-6 flex gap-6 text-sm text-gray-600">
            <div className="flex items-center gap-1">
              üëç <span>B·∫£o h√†nh</span>
            </div>
            <div className="flex items-center gap-1">
              üì¶ <span> C√≤n {product.quantity} s·∫£n ph·∫©m</span>
            </div>
          </div>

          {/* button */}
          <div className="mt-6 flex flex-wrap gap-4">
            <button
              className="text-white px-6 py-2 rounded bg-[#5e3a1e] hover:bg-[#4a2f15]"
              onClick={handleBuyNow}
            >
              Mua ngay
            </button>
            <button className="text-white px-6 py-2 rounded bg-[#5e3a1e] hover:bg-[#4a2f15]"
              onClick={handleAddToCart}
            >
              üõí Th√™m v√†o gi·ªè h√†ng
            </button>
            <button className="border border-yellow-700 text-yellow-700 px-6 py-2 rounded hover:bg-yellow-50"
              onClick={handleFavorite}>
              ü§é Y√™u Th√≠ch
            </button>
          </div>
        </div>
      </div>

      {/* dang gia san pham */}
      <div className="h-[1px] bg-gradient-to-r from-transparent via-gray-300 to-transparent my-12"></div>
      <div className="container mx-auto px-6 pb-12 text-[#5e3a1e]">
        <ProductReviews reviews={reviews} />
      </div>
    </MainLayout>
  );
};

export default ProductDetail;
